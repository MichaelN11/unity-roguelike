{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 soon:\
ranged attacks\
move look direction and attack animation (refactored to attack stage) to entity state\
entity state handles stop moving?\
refactor duration out of attack ability data\
\
later:\
give simpler entities their own animator updater\
make bow look less terrible when rotating\
rework how hitstun / knockback is handled, in regard to entity and ability data\
refactor entitydata/entitycontroller relationship, make entitydata a component?\
fix twig enemy sprites\
better way to handle attack animations (use override controllers instead of enum)\
hitting an enemy should stop you from moving further in the attack\
sword stab at end of combo\
A* cheat for closest tile, for target and position\
camera follow script\
slide around corners\
better rotation for attacks/ability sprites/graphics\
normalize angles better\
support for attacks using different animations/hitboxes\
AI finds targets instead of using player singleton\
better handling for pathing grid than tilemap singleton\
invincibility frames after being hit, player only\
attacking at 0,0 at the start bug\
consider refactoring how EntityController initializes AttackOnCollision\
enemies should clump together less\
enemies should \'93leash\'94 back to their spawn point after running too far\
damping functions for movement?\
enemies shake when hit\
better sound effects\
figure out sound effect attributions\
hunter class\
\
far future:\
camera track while dashing\
get someone to playtest\
object pooling\
AI behavior tree\
AI move in weighted directions when close to player\
CI/CD\
\
look into:\
scriptable objects\
coroutines\
late update\
webgl\
using events for sound}